###################### Global Config ######################

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'

stages:
  - build
  - process

###################### Rules and Scripts ##################

.not_in_wip_branches:
  rules:
    - if: ($CI_COMMIT_BRANCH !~ /^wip-.*$/) || ($CI_PIPELINE_SOURCE == "merge_request_event")

.build-common:
  stage: build
  script:
    - opam update -y
    - opam remove -y coq-mathcomp-character coq-mathcomp-field coq-mathcomp-solvable  # Check coq-mathcomp-ssreflect is enough
    - opam pin add -n -y -k path coq-prosa .
    - opam install -y -v -j ${NJOBS} coq-prosa

.preferred-stable-version:
    image: mathcomp/mathcomp:1.14.0-coq-8.15

.build:
  image: mathcomp/mathcomp:${CI_JOB_NAME}
  extends: .build-common

.build-dev:
  image: mathcomp/mathcomp-dev:${CI_JOB_NAME}
  extends: .build-common

.compile:
  stage: build
  extends:
    - .preferred-stable-version
  script:
    - opam update; opam install coq-mathcomp-zify
    - ./create_makefile.sh --without-classic
    - make -j ${NJOBS}

.compile-classic:
  stage: build
  extends:
    - .preferred-stable-version
  script:
    - opam update; opam install coq-mathcomp-zify
    - ./create_makefile.sh --only-classic
    - make -j ${NJOBS}

.collect-vo-files: 
  # Keep track of all compiled output and the build infrastructure
  artifacts:
    name: prosa-build-files
    paths:
    - Makefile
    - Makefile.conf
    # Ugly hack around https://gitlab.com/gitlab-org/gitlab-runner/issues/2620
    - "*/*.vo"
    - "*/*/*.vo"
    - "*/*/*/*.vo"
    - "*/*/*/*/*.vo"
    - "*/*/*/*/*/*.vo"
    - "*/*/*/*/*/*/*.vo"
    - "*/*/*/*/*/*/*/*.vo"
    - "*/*/*/*/*/*/*/*/*.vo"
    - "*/*/*/*/*/*/*/*/*/*.vo"
    - "*/*.glob"
    - "*/*/*.glob"
    - "*/*/*/*.glob"
    - "*/*/*/*/*.glob"
    - "*/*/*/*/*/*.glob"
    - "*/*/*/*/*/*/*.glob"
    - "*/*/*/*/*/*/*/*.glob"
    - "*/*/*/*/*/*/*/*/*.glob"
    - "*/*/*/*/*/*/*/*/*/*.glob"
    expire_in: 1 week

.doc: 
  extends:
    - .preferred-stable-version
  stage: process
  script:
    - opam update; opam install coq-mathcomp-zify
    - make html -j ${NJOBS}
    - mv html with-proofs
    - make gallinahtml -j ${NJOBS}
    - mv html without-proofs
    - make htmlpretty -j ${NJOBS}
    - mv html pretty


###################### The Jobs ######################

1.13.0-coq-8.14:
  extends:
    - .build
    - .not_in_wip_branches

1.14.0-coq-8.15:
  extends:
    - .build
    - .not_in_wip_branches

compile:
  extends:
    - .compile
    - .collect-vo-files

compile-classic:
  extends:
    - .not_in_wip_branches
    - .compile-classic
    - .collect-vo-files

proof-length:
  stage: build
  image: python:3-alpine
  script:
    - scripts/proofloc.py --check --long-proofs scripts/known-long-proofs.json `find . -iname *.v`

spell-check:
  extends:  
    - .not_in_wip_branches  
  stage: build
  image: bbbrandenburg/aspell-ci
  script:
    - scripts/flag-typos-in-comments.sh `find .  -iname '*.v' ! -path './classic/*'`

# mathcomp-dev with stable Coq
coq-8.15:
  extends:
    - .build-dev
    - .not_in_wip_branches    
  # it's ok to fail with an unreleased version of ssreflect
  allow_failure: true

# mathcomp-dev with coq-dev
coq-dev:
  extends:
    - .build-dev
    - .not_in_wip_branches    
  # it's ok to fail with an unreleased version of ssreflect and Coq
  allow_failure: true

validate:
  extends:
    - .not_in_wip_branches
    - .preferred-stable-version
  stage: process
  needs: ["compile"]
  dependencies:
    - compile
  script:
    - opam update; opam install coq-mathcomp-zify
    - make -j ${NJOBS} # CI gotcha â€” get any spurious recompilation out of the way
    - make validate 2>&1 | tee validation-results.txt
    - scripts/check-validation-output.sh validation-results.txt

validate-classic:
  extends:
    - .not_in_wip_branches  
    - .preferred-stable-version
  stage: process
  needs: ["compile-classic"]
  dependencies:
    - compile-classic
  script:
    - opam update; opam install coq-mathcomp-zify
    - make validate

doc:
  extends:
    - .doc
  needs: ["compile"]
  dependencies:
    - compile
  artifacts:
    name: "prosa-spec-$CI_COMMIT_REF_NAME"
    paths:
      - "with-proofs/"
      - "without-proofs/"
      - "pretty/"
    expire_in: 1 week

doc-classic:
  extends:
    - .not_in_wip_branches  
    - .doc
  needs: ["compile-classic"]
  dependencies:
    - compile-classic
  artifacts:
    name: "prosa-classic-spec-$CI_COMMIT_REF_NAME"
    paths:
      - "with-proofs/"
      - "without-proofs/"
      - "pretty/"
    expire_in: 1 week

proof-state:
  extends:
   - .not_in_wip_branches  
  stage: build
  image: bbbrandenburg/alectryon-ci:1.14.0-coq-8.15.0
  script:
    - eval $(opam env "--switch=${COMPILER_EDGE}" --set-switch)
    - opam update; opam install coq-mathcomp-zify
    - ./create_makefile.sh --without-classic
    - make -j ${NJOBS} alectryon
  artifacts:
    name: "prosa-proof-state-$CI_COMMIT_REF_NAME"
    paths:
      - "html-alectryon/"
    expire_in: 1 week
