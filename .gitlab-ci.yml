###################### Global Config ######################

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'

stages:
  - build

###################### Rules and Scripts ##################

.not_in_wip_branches:
  rules:
    - if: ($CI_COMMIT_BRANCH !~ /^wip-.*$/) || ($CI_PIPELINE_SOURCE == "merge_request_event")

.only_in_wip_branches:
  rules:
    - if: ($CI_COMMIT_BRANCH =~ /^wip-.*$/) && ($CI_PIPELINE_SOURCE != "merge_request_event")

.build-common:
  stage: build
  script:
    - opam pin add -n -y -k path coq-prosa .
    - opam install -y -v -j ${NJOBS} coq-prosa
    - opam pin add -n -y -k path coq-prosa-refinements .
    - opam install -y -v -j ${NJOBS} coq-prosa-refinements

.preferred-stable-version:
    image: bbbrandenburg/mathcomp-for-prosa:1.16.0-coq-8.16

.build:
  image: bbbrandenburg/mathcomp-for-prosa:${CI_JOB_NAME}
  extends: .build-common

.build-and-test-POET:
  extends: .build
  script:
    - !reference [.build-common, script]
    - git clone https://gitlab.mpi-sws.org/RT-PROOFS/POET.git -b POET-for-Prosa-CI
    - cd POET
    - pip3 install -r requirements.txt
    - >-
      for WORKLOAD in examples/*.yaml;
      do
        CERT=certs/cert-for-`basename $WORKLOAD`;
        echo; echo; echo;
        echo "==================";
        echo "Testing $WORKLOAD:";
        mkdir -p $CERT;
        time ./poet -v -o $CERT -j ${NJOBS} -s $WORKLOAD;
      done;
      

.make-html:
  script:
    - make html -j ${NJOBS}
    - mv html with-proofs
    - make gallinahtml -j ${NJOBS}
    - mv html without-proofs
    - make htmlpretty -j ${NJOBS}
    - mv html pretty

###################### The Jobs ######################

1.16.0-coq-8.16:
  extends:
    - .build
    - .not_in_wip_branches

# 1.16.0-coq-8.17:
#   extends:
#     - .build
#     - .not_in_wip_branches

POET:
  extends:
    - .build-and-test-POET
    - .preferred-stable-version
    - .not_in_wip_branches

compile-and-doc:
  stage: build
  extends:
    - .only_in_wip_branches
    - .preferred-stable-version
  script:
    - make -j ${NJOBS} all
    - !reference [.make-html, script]
  artifacts:
    name: "prosa-spec-$CI_COMMIT_REF_NAME"
    paths:
      - "with-proofs/"
      - "without-proofs/"
      - "pretty/"
    expire_in: 1 week

compile-and-doc-and-validate:
  stage: build
  extends:
    - .not_in_wip_branches
    - .preferred-stable-version
  script:
    - make -j ${NJOBS} all
    - !reference [.make-html, script]
    - make validate 2>&1 | tee validation-results.txt
    - scripts/check-validation-output.sh --accept-proof-irrelevance validation-results.txt
  artifacts:
    name: "prosa-spec-$CI_COMMIT_REF_NAME"
    paths:
      - "with-proofs/"
      - "without-proofs/"
      - "pretty/"
    expire_in: 1 week

mangle-names:
  stage: build
  extends:
    - .not_in_wip_branches
    - .preferred-stable-version
  script:
    - make -j ${NJOBS} mangle-names

# Check that proof irrelevance shows up only due to refinements.
compile-and-validate:
  stage: build
  extends:
    - .not_in_wip_branches
    - .preferred-stable-version
  script:
    - make -j ${NJOBS}
    - make validate 2>&1 | tee validation-results.txt
    - scripts/check-validation-output.sh validation-results.txt

proof-length:
  stage: build
  image: python:3
  script:
    - make proof-length

spell-check:
  extends:
    - .not_in_wip_branches
  stage: build
  image: bbbrandenburg/aspell-ci:2023-03
  script:
    - make spell

# mathcomp-dev with stable Coq
#coq-8.17:
#  extends:
#    - .build-dev
#    - .not_in_wip_branches
#  # it's ok to fail with an unreleased version of ssreflect
#  allow_failure: true

# mathcomp-dev with coq-dev
#coq-dev:
#  extends:
#    - .build-dev
#    - .not_in_wip_branches
#  # it's ok to fail with an unreleased version of ssreflect and Coq
#  allow_failure: true

proof-state:
  extends:
   - .not_in_wip_branches
  stage: build
  image: bbbrandenburg/alectryon-ci:1.16.0-coq-8.16
  script:
    - eval $(opam env)
    - make -j ${NJOBS} all
    - make -j ${NJOBS} alectryon
  artifacts:
    name: "prosa-proof-state-$CI_COMMIT_REF_NAME"
    paths:
      - "html-alectryon/"
    expire_in: 1 week
